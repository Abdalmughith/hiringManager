global count = 0;
global countPosition = 0;

define Person {
	constructor: function (obj) {
		this.id = scope.count;
		if(obj.id)
			this.id = obj.id;
		this.name = obj.name;
		this.age = obj.age;	
		scope.count++;
	}
}

define skill {
	constructor: function (personId, skillName, score) {
		this.personId = personId;
		this.skillName = skillName;
		this.score = score;
	}
}

define personPos {
	constructor: function (personId, posId, rank) {
		this.personId = personId;
		this.posId = posId;
		this.rank = rank;
	}
}

define position {
	constructor: function (name,skills) {
		this.id = scope.countPosition;
		this.name = name;
		this.skills = skills;

		scope.countPosition++;
	}
}


define Result {
	rules: []
}


rule "web devloper" {
	when {
		pos: position pos.name == 'web devloper';
		c: Person;
		s1: skill s1.personId == c.id && s1.skillName == pos.skills[0].name;
		s2: skill s2.personId == c.id && s2.skillName == pos.skills[1].name;
		s3: skill s3.personId == c.id && s3.skillName == pos.skills[2].name ;
	}
	then {
		var totalScore = pos.skills[0].score+pos.skills[1].score+pos.skills[2].score;
		var rank = ((s1.score *pos.skills[0].score)+ (s2.score *pos.skills[1].score)+ (s3.score *pos.skills[2].score))/totalScore;
		assert(new personPos(c.id,pos.id,rank));
	}
}

rule "QQQ" {
	when {
	r : Result;
	perPos : personPos;
	}
	then {
		r.rules.push(perPos);
	}
}
